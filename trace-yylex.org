* lex_strterm
- lex_strterm == 0
** nd_type(lex_strterm) == NODE_HEREDOC
** nd_type(lex_strterm) != NODE_HEREDOC
* !lex_strterm
- command_start == TRUE
- lex_state == 1

static inline int
parser_nextc(struct parser_params *parser)
{
    int c;

    if (UNLIKELY(lex_p == lex_pend)) {
	if (parser_nextline(parser)) return -1;
    }
    c = (unsigned char)*lex_p++;
    if (UNLIKELY(c == '\r')) {
	c = parser_cr(parser, c);
    }

    return c;
}
** lex_p == lex_pend
*** parser_nextline(parser)
*** !parser_nextline(parser)
**** lex_p[0] == '\r'
**** lex_p[0] == '\0'
**** lex_p[0] == '\004'
**** lex_p[0] == '\032'
**** lex_p[0] == ' '
**** lex_p[0] == '\t'
**** lex_p[0] == '\f'
**** lex_p[0] == '\r'
**** lex_p[0] == '\13'
**** lex_p[0] == '#'
**** lex_p[0] == '\n'
**** lex_p[0] == '*'
**** lex_p[0] == '!'
**** lex_p[0] == '='
**** lex_p[0] == '<'
**** lex_p[0] == '>'
**** lex_p[0] == '"'
**** lex_p[0] == '`'
**** lex_p[0] == '\''
**** lex_p[0] == '?'
**** lex_p[0] == '&'
**** lex_p[0] == '|'
**** lex_p[0] == '+'
**** lex_p[0] == '-'
**** lex_p[0] == '.'
**** lex_p[0] == '0'
**** lex_p[0] == '1'
**** lex_p[0] == '2'
**** lex_p[0] == '3'
**** lex_p[0] == '4'
**** lex_p[0] == '5'
**** lex_p[0] == '6'
**** lex_p[0] == '7'
**** lex_p[0] == '8'
**** lex_p[0] == '9'
**** lex_p[0] == ')'
**** lex_p[0] == ']'
**** lex_p[0] == '}'
**** lex_p[0] == ':'
**** lex_p[0] == '/'
**** lex_p[0] == '^'
**** lex_p[0] == ';'
**** lex_p[0] == ','
**** lex_p[0] == '~'
**** lex_p[0] == '('
**** lex_p[0] == '['
**** lex_p[0] == '{'
**** lex_p[0] == '\\'
**** lex_p[0] == '%'
**** lex_p[0] == '$'
**** lex_p[0] == '@'
**** lex_p[0] == '_'
**** lex_p[0] == <other>
** lex_p != lex_pend
*** lex_p[0] == '\r'
*** lex_p[0] == '\0'
*** lex_p[0] == '\004'
*** lex_p[0] == '\032'
*** lex_p[0] == ' '
*** lex_p[0] == '\t'
*** lex_p[0] == '\f'
*** lex_p[0] == '\r'
*** lex_p[0] == '\13'
*** lex_p[0] == '#'
*** lex_p[0] == '\n'
*** lex_p[0] == '*'
*** lex_p[0] == '!'
*** lex_p[0] == '='
*** lex_p[0] == '<'
*** lex_p[0] == '>'
*** lex_p[0] == '"'
*** lex_p[0] == '`'
*** lex_p[0] == '\''
*** lex_p[0] == '?'
*** lex_p[0] == '&'
*** lex_p[0] == '|'
*** lex_p[0] == '+'
*** lex_p[0] == '-'
*** lex_p[0] == '.'
*** lex_p[0] == '0'
*** lex_p[0] == '1'
*** lex_p[0] == '2'
*** lex_p[0] == '3'
*** lex_p[0] == '4'
*** lex_p[0] == '5'
*** lex_p[0] == '6'
*** lex_p[0] == '7'
*** lex_p[0] == '8'
*** lex_p[0] == '9'
*** lex_p[0] == ')'
*** lex_p[0] == ']'
*** lex_p[0] == '}'
*** lex_p[0] == ':'
*** lex_p[0] == '/'
*** lex_p[0] == '^'
*** lex_p[0] == ';'
*** lex_p[0] == ','
*** lex_p[0] == '~'
*** lex_p[0] == '('
*** lex_p[0] == '['
*** lex_p[0] == '{'
*** lex_p[0] == '\\'
*** lex_p[0] == '%'
*** lex_p[0] == '$'
*** lex_p[0] == '@'
*** lex_p[0] == '_'
*** lex_p[0] == <other>
